pipeline {
    agent any
    tools {
        nodejs "node"
    }
    // Declare a variable to track test results
    environment {
        TEST_FAILED = false
    }
    stages {
        stage("Node Version") {
            steps {
                sh 'node --version'
            }
        }
        stage("Clone Repo") {
            steps {
                git(
                   url: "https://github.com/ChepkemoiPeris/gallery.git",
                   branch: "master"
               )
            }
        }
        stage("Install npm") {
            steps {
                sh 'npm install'
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    try {
                        sh 'npm test'
                    } catch (Exception e) {
                        TEST_FAILED = true
                        error("Tests failed!")
                    }
                }
            }
        }
        stage('Deploy to Render') {
            steps {
                withCredentials([string(credentialsId: 'render-deploy-hook', variable: 'RENDER_DEPLOY_HOOK')]) {
                    sh """
                    curl -X POST ${RENDER_DEPLOY_HOOK}
                    """
                } 
            }
        }
    }
    post {
        failure {
            script {
                if (TEST_FAILED) {
                   emailext subject: '$DEFAULT_SUBJECT',
                        body: '$DEFAULT_CONTENT',
                        recipientProviders: [
                            [$class: 'CulpritsRecipientProvider'],
                            [$class: 'DevelopersRecipientProvider'],
                            [$class: 'RequesterRecipientProvider'] 
                        ], 
                        replyTo: '$DEFAULT_REPLYTO',
                        to: '$DEFAULT_RECIPIENTS'
                  //   withCredentials([string(credentialsId: 'notification_email', variable: 'NOTIFICATION_EMAIL')]) {
                  //       mail to: "${NOTIFICATION_EMAIL}",
                  //            subject: "Test Failure: ${currentBuild.fullDisplayName}",
                  //            body: "The tests have failed.\nCheck Jenkins for details: ${env.BUILD_URL}"
                  //   }
                }
            }
        }
    }
}
